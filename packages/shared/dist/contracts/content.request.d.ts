import { z } from 'zod';
export declare const createContentItemRequestSchema: z.ZodObject<{
    title: z.ZodString;
    slug: z.ZodString;
    excerpt: z.ZodOptional<z.ZodString>;
    content: z.ZodOptional<z.ZodString>;
    contentType: z.ZodEnum<["article", "video", "podcast", "framework", "tool", "case_study", "interview", "course_lesson"]>;
    format: z.ZodDefault<z.ZodEnum<["text", "video", "audio", "interactive", "pdf", "presentation"]>>;
    primaryCategoryId: z.ZodOptional<z.ZodString>;
    secondaryCategories: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    theologicalThemes: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    seriesId: z.ZodOptional<z.ZodString>;
    seriesOrder: z.ZodDefault<z.ZodNumber>;
    visibility: z.ZodDefault<z.ZodEnum<["public", "premium", "vip", "private", "organization"]>>;
    status: z.ZodDefault<z.ZodEnum<["draft", "published", "archived", "under_review", "scheduled"]>>;
    featuredImageUrl: z.ZodOptional<z.ZodString>;
    videoUrl: z.ZodOptional<z.ZodString>;
    audioUrl: z.ZodOptional<z.ZodString>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        url: z.ZodString;
        type: z.ZodString;
        size: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        name: string;
        type: string;
        size: number;
        url: string;
    }, {
        name: string;
        type: string;
        size: number;
        url: string;
    }>, "many">>;
    metaTitle: z.ZodOptional<z.ZodString>;
    metaDescription: z.ZodOptional<z.ZodString>;
    canonicalUrl: z.ZodOptional<z.ZodString>;
    originalSource: z.ZodOptional<z.ZodString>;
    licenseType: z.ZodDefault<z.ZodEnum<["all_rights_reserved", "creative_commons", "public_domain", "fair_use"]>>;
    attributionRequired: z.ZodDefault<z.ZodBoolean>;
    publishedAt: z.ZodOptional<z.ZodDate>;
    scheduledAt: z.ZodOptional<z.ZodDate>;
}, "strip", z.ZodTypeAny, {
    slug: string;
    status: "draft" | "published" | "archived" | "under_review" | "scheduled";
    title: string;
    contentType: "article" | "video" | "podcast" | "framework" | "tool" | "case_study" | "interview" | "course_lesson";
    format: "video" | "text" | "audio" | "interactive" | "pdf" | "presentation";
    secondaryCategories: string[];
    tags: string[];
    theologicalThemes: string[];
    seriesOrder: number;
    visibility: "public" | "premium" | "vip" | "private" | "organization";
    attachments: {
        name: string;
        type: string;
        size: number;
        url: string;
    }[];
    licenseType: "all_rights_reserved" | "creative_commons" | "public_domain" | "fair_use";
    attributionRequired: boolean;
    metaDescription?: string | undefined;
    excerpt?: string | undefined;
    content?: string | undefined;
    primaryCategoryId?: string | undefined;
    seriesId?: string | undefined;
    featuredImageUrl?: string | undefined;
    videoUrl?: string | undefined;
    audioUrl?: string | undefined;
    metaTitle?: string | undefined;
    canonicalUrl?: string | undefined;
    originalSource?: string | undefined;
    publishedAt?: Date | undefined;
    scheduledAt?: Date | undefined;
}, {
    slug: string;
    title: string;
    contentType: "article" | "video" | "podcast" | "framework" | "tool" | "case_study" | "interview" | "course_lesson";
    status?: "draft" | "published" | "archived" | "under_review" | "scheduled" | undefined;
    metaDescription?: string | undefined;
    excerpt?: string | undefined;
    content?: string | undefined;
    format?: "video" | "text" | "audio" | "interactive" | "pdf" | "presentation" | undefined;
    primaryCategoryId?: string | undefined;
    secondaryCategories?: string[] | undefined;
    tags?: string[] | undefined;
    theologicalThemes?: string[] | undefined;
    seriesId?: string | undefined;
    seriesOrder?: number | undefined;
    visibility?: "public" | "premium" | "vip" | "private" | "organization" | undefined;
    featuredImageUrl?: string | undefined;
    videoUrl?: string | undefined;
    audioUrl?: string | undefined;
    attachments?: {
        name: string;
        type: string;
        size: number;
        url: string;
    }[] | undefined;
    metaTitle?: string | undefined;
    canonicalUrl?: string | undefined;
    originalSource?: string | undefined;
    licenseType?: "all_rights_reserved" | "creative_commons" | "public_domain" | "fair_use" | undefined;
    attributionRequired?: boolean | undefined;
    publishedAt?: Date | undefined;
    scheduledAt?: Date | undefined;
}>;
export declare const updateContentItemRequestSchema: z.ZodObject<{
    id: z.ZodString;
} & Omit<{
    title: z.ZodOptional<z.ZodString>;
    slug: z.ZodOptional<z.ZodString>;
    excerpt: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    content: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    contentType: z.ZodOptional<z.ZodEnum<["article", "video", "podcast", "framework", "tool", "case_study", "interview", "course_lesson"]>>;
    format: z.ZodOptional<z.ZodDefault<z.ZodEnum<["text", "video", "audio", "interactive", "pdf", "presentation"]>>>;
    primaryCategoryId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    secondaryCategories: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    tags: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    theologicalThemes: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    seriesId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    seriesOrder: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    visibility: z.ZodOptional<z.ZodDefault<z.ZodEnum<["public", "premium", "vip", "private", "organization"]>>>;
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["draft", "published", "archived", "under_review", "scheduled"]>>>;
    featuredImageUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    videoUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    audioUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    attachments: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        url: z.ZodString;
        type: z.ZodString;
        size: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        name: string;
        type: string;
        size: number;
        url: string;
    }, {
        name: string;
        type: string;
        size: number;
        url: string;
    }>, "many">>>;
    metaTitle: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    metaDescription: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    canonicalUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    originalSource: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    licenseType: z.ZodOptional<z.ZodDefault<z.ZodEnum<["all_rights_reserved", "creative_commons", "public_domain", "fair_use"]>>>;
    attributionRequired: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    publishedAt: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    scheduledAt: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
}, "slug">, "strip", z.ZodTypeAny, {
    id: string;
    status?: "draft" | "published" | "archived" | "under_review" | "scheduled" | undefined;
    metaDescription?: string | undefined;
    title?: string | undefined;
    excerpt?: string | undefined;
    content?: string | undefined;
    contentType?: "article" | "video" | "podcast" | "framework" | "tool" | "case_study" | "interview" | "course_lesson" | undefined;
    format?: "video" | "text" | "audio" | "interactive" | "pdf" | "presentation" | undefined;
    primaryCategoryId?: string | undefined;
    secondaryCategories?: string[] | undefined;
    tags?: string[] | undefined;
    theologicalThemes?: string[] | undefined;
    seriesId?: string | undefined;
    seriesOrder?: number | undefined;
    visibility?: "public" | "premium" | "vip" | "private" | "organization" | undefined;
    featuredImageUrl?: string | undefined;
    videoUrl?: string | undefined;
    audioUrl?: string | undefined;
    attachments?: {
        name: string;
        type: string;
        size: number;
        url: string;
    }[] | undefined;
    metaTitle?: string | undefined;
    canonicalUrl?: string | undefined;
    originalSource?: string | undefined;
    licenseType?: "all_rights_reserved" | "creative_commons" | "public_domain" | "fair_use" | undefined;
    attributionRequired?: boolean | undefined;
    publishedAt?: Date | undefined;
    scheduledAt?: Date | undefined;
}, {
    id: string;
    status?: "draft" | "published" | "archived" | "under_review" | "scheduled" | undefined;
    metaDescription?: string | undefined;
    title?: string | undefined;
    excerpt?: string | undefined;
    content?: string | undefined;
    contentType?: "article" | "video" | "podcast" | "framework" | "tool" | "case_study" | "interview" | "course_lesson" | undefined;
    format?: "video" | "text" | "audio" | "interactive" | "pdf" | "presentation" | undefined;
    primaryCategoryId?: string | undefined;
    secondaryCategories?: string[] | undefined;
    tags?: string[] | undefined;
    theologicalThemes?: string[] | undefined;
    seriesId?: string | undefined;
    seriesOrder?: number | undefined;
    visibility?: "public" | "premium" | "vip" | "private" | "organization" | undefined;
    featuredImageUrl?: string | undefined;
    videoUrl?: string | undefined;
    audioUrl?: string | undefined;
    attachments?: {
        name: string;
        type: string;
        size: number;
        url: string;
    }[] | undefined;
    metaTitle?: string | undefined;
    canonicalUrl?: string | undefined;
    originalSource?: string | undefined;
    licenseType?: "all_rights_reserved" | "creative_commons" | "public_domain" | "fair_use" | undefined;
    attributionRequired?: boolean | undefined;
    publishedAt?: Date | undefined;
    scheduledAt?: Date | undefined;
}>;
export declare const contentSearchRequestSchema: z.ZodObject<{
    page: z.ZodDefault<z.ZodNumber>;
    limit: z.ZodDefault<z.ZodNumber>;
    search: z.ZodOptional<z.ZodString>;
    contentType: z.ZodOptional<z.ZodEnum<["article", "video", "podcast", "framework", "tool", "case_study", "interview", "course_lesson"]>>;
    status: z.ZodDefault<z.ZodEnum<["draft", "published", "archived", "under_review", "scheduled"]>>;
    visibility: z.ZodOptional<z.ZodEnum<["public", "premium", "vip", "private", "organization"]>>;
    categoryId: z.ZodOptional<z.ZodString>;
    authorId: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    theologicalThemes: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    seriesId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status: "draft" | "published" | "archived" | "under_review" | "scheduled";
    limit: number;
    page: number;
    authorId?: string | undefined;
    contentType?: "article" | "video" | "podcast" | "framework" | "tool" | "case_study" | "interview" | "course_lesson" | undefined;
    tags?: string[] | undefined;
    theologicalThemes?: string[] | undefined;
    seriesId?: string | undefined;
    visibility?: "public" | "premium" | "vip" | "private" | "organization" | undefined;
    search?: string | undefined;
    categoryId?: string | undefined;
}, {
    status?: "draft" | "published" | "archived" | "under_review" | "scheduled" | undefined;
    authorId?: string | undefined;
    contentType?: "article" | "video" | "podcast" | "framework" | "tool" | "case_study" | "interview" | "course_lesson" | undefined;
    tags?: string[] | undefined;
    theologicalThemes?: string[] | undefined;
    seriesId?: string | undefined;
    visibility?: "public" | "premium" | "vip" | "private" | "organization" | undefined;
    limit?: number | undefined;
    search?: string | undefined;
    page?: number | undefined;
    categoryId?: string | undefined;
}>;
export declare const createContentCategoryRequestSchema: z.ZodObject<{
    name: z.ZodString;
    slug: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    parentId: z.ZodOptional<z.ZodString>;
    orderIndex: z.ZodDefault<z.ZodNumber>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    icon: z.ZodOptional<z.ZodString>;
    color: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    slug: string;
    orderIndex: number;
    isActive: boolean;
    description?: string | undefined;
    parentId?: string | undefined;
    icon?: string | undefined;
    color?: string | undefined;
}, {
    name: string;
    slug: string;
    description?: string | undefined;
    parentId?: string | undefined;
    orderIndex?: number | undefined;
    isActive?: boolean | undefined;
    icon?: string | undefined;
    color?: string | undefined;
}>;
export declare const updateContentCategoryRequestSchema: z.ZodObject<{
    id: z.ZodString;
} & Omit<{
    name: z.ZodOptional<z.ZodString>;
    slug: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    parentId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    orderIndex: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    icon: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    color: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "slug">, "strip", z.ZodTypeAny, {
    id: string;
    name?: string | undefined;
    description?: string | undefined;
    parentId?: string | undefined;
    orderIndex?: number | undefined;
    isActive?: boolean | undefined;
    icon?: string | undefined;
    color?: string | undefined;
}, {
    id: string;
    name?: string | undefined;
    description?: string | undefined;
    parentId?: string | undefined;
    orderIndex?: number | undefined;
    isActive?: boolean | undefined;
    icon?: string | undefined;
    color?: string | undefined;
}>;
export declare const createContentSeriesRequestSchema: z.ZodObject<{
    title: z.ZodString;
    slug: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    categoryId: z.ZodOptional<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["draft", "published", "archived", "under_review"]>>;
    featuredImageUrl: z.ZodOptional<z.ZodString>;
    metaTitle: z.ZodOptional<z.ZodString>;
    metaDescription: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    slug: string;
    status: "draft" | "published" | "archived" | "under_review";
    title: string;
    description?: string | undefined;
    metaDescription?: string | undefined;
    featuredImageUrl?: string | undefined;
    metaTitle?: string | undefined;
    categoryId?: string | undefined;
}, {
    slug: string;
    title: string;
    description?: string | undefined;
    status?: "draft" | "published" | "archived" | "under_review" | undefined;
    metaDescription?: string | undefined;
    featuredImageUrl?: string | undefined;
    metaTitle?: string | undefined;
    categoryId?: string | undefined;
}>;
export declare const updateContentSeriesRequestSchema: z.ZodObject<{
    id: z.ZodString;
} & Omit<{
    title: z.ZodOptional<z.ZodString>;
    slug: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    categoryId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["draft", "published", "archived", "under_review"]>>>;
    featuredImageUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    metaTitle: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    metaDescription: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "slug">, "strip", z.ZodTypeAny, {
    id: string;
    description?: string | undefined;
    status?: "draft" | "published" | "archived" | "under_review" | undefined;
    metaDescription?: string | undefined;
    title?: string | undefined;
    featuredImageUrl?: string | undefined;
    metaTitle?: string | undefined;
    categoryId?: string | undefined;
}, {
    id: string;
    description?: string | undefined;
    status?: "draft" | "published" | "archived" | "under_review" | undefined;
    metaDescription?: string | undefined;
    title?: string | undefined;
    featuredImageUrl?: string | undefined;
    metaTitle?: string | undefined;
    categoryId?: string | undefined;
}>;
export type CreateContentItemRequest = z.infer<typeof createContentItemRequestSchema>;
export type UpdateContentItemRequest = z.infer<typeof updateContentItemRequestSchema>;
export type ContentSearchRequest = z.infer<typeof contentSearchRequestSchema>;
export type CreateContentCategoryRequest = z.infer<typeof createContentCategoryRequestSchema>;
export type UpdateContentCategoryRequest = z.infer<typeof updateContentCategoryRequestSchema>;
export type CreateContentSeriesRequest = z.infer<typeof createContentSeriesRequestSchema>;
export type UpdateContentSeriesRequest = z.infer<typeof updateContentSeriesRequestSchema>;
//# sourceMappingURL=content.request.d.ts.map