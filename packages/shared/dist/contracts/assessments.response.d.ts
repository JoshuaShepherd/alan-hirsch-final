import { z } from 'zod';
export declare const assessmentResponseSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    slug: z.ZodString;
    description: z.ZodString;
    assessmentType: z.ZodEnum<["apest", "mdna", "cultural_intelligence", "leadership_style", "spiritual_gifts", "other"]>;
    questionsCount: z.ZodNumber;
    estimatedDuration: z.ZodNullable<z.ZodNumber>;
    passingScore: z.ZodNullable<z.ZodNumber>;
    version: z.ZodString;
    language: z.ZodString;
    culturalAdaptation: z.ZodEnum<["western", "eastern", "african", "latin_american", "middle_eastern", "oceanic", "universal", "global"]>;
    researchBacked: z.ZodBoolean;
    validityScore: z.ZodString;
    reliabilityScore: z.ZodString;
    instructions: z.ZodString;
    scoringMethod: z.ZodEnum<["likert_5", "likert_7", "binary", "ranking", "weighted"]>;
    status: z.ZodEnum<["draft", "active", "archived", "under_review"]>;
    isPublished: z.ZodBoolean;
    isActive: z.ZodBoolean;
    estimatedDurationText: z.ZodString;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
    publishedAt: z.ZodNullable<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    id: string;
    slug: string;
    description: string;
    status: "draft" | "archived" | "under_review" | "active";
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    isPublished: boolean;
    publishedAt: string | null;
    assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
    questionsCount: number;
    estimatedDuration: number | null;
    passingScore: number | null;
    version: string;
    language: string;
    culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
    researchBacked: boolean;
    validityScore: string;
    reliabilityScore: string;
    instructions: string;
    scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
    estimatedDurationText: string;
}, {
    name: string;
    id: string;
    slug: string;
    description: string;
    status: "draft" | "archived" | "under_review" | "active";
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    isPublished: boolean;
    publishedAt: string | null;
    assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
    questionsCount: number;
    estimatedDuration: number | null;
    passingScore: number | null;
    version: string;
    language: string;
    culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
    researchBacked: boolean;
    validityScore: string;
    reliabilityScore: string;
    instructions: string;
    scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
    estimatedDurationText: string;
}>;
export declare const assessmentQuestionResponseSchema: z.ZodObject<{
    id: z.ZodString;
    assessmentId: z.ZodString;
    questionText: z.ZodString;
    questionType: z.ZodEnum<["likert", "multiple_choice", "binary", "ranking", "text"]>;
    orderIndex: z.ZodNumber;
    isRequired: z.ZodBoolean;
    category: z.ZodString;
    weight: z.ZodNumber;
    reverseScored: z.ZodBoolean;
    apestDimension: z.ZodNullable<z.ZodEnum<["apostolic", "prophetic", "evangelistic", "shepherding", "teaching"]>>;
    answerOptions: z.ZodArray<z.ZodObject<{
        value: z.ZodNumber;
        label: z.ZodString;
        description: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description: string;
        value: number;
        label: string;
    }, {
        description: string;
        value: number;
        label: string;
    }>, "many">;
    hasAnswerOptions: z.ZodBoolean;
    isApestQuestion: z.ZodBoolean;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    orderIndex: number;
    createdAt: string;
    updatedAt: string;
    category: string;
    questionText: string;
    questionType: "text" | "multiple_choice" | "binary" | "ranking" | "likert";
    assessmentId: string;
    isRequired: boolean;
    weight: number;
    reverseScored: boolean;
    apestDimension: "apostolic" | "prophetic" | "evangelistic" | "shepherding" | "teaching" | null;
    answerOptions: {
        description: string;
        value: number;
        label: string;
    }[];
    hasAnswerOptions: boolean;
    isApestQuestion: boolean;
}, {
    id: string;
    orderIndex: number;
    createdAt: string;
    updatedAt: string;
    category: string;
    questionText: string;
    questionType: "text" | "multiple_choice" | "binary" | "ranking" | "likert";
    assessmentId: string;
    isRequired: boolean;
    weight: number;
    reverseScored: boolean;
    apestDimension: "apostolic" | "prophetic" | "evangelistic" | "shepherding" | "teaching" | null;
    answerOptions: {
        description: string;
        value: number;
        label: string;
    }[];
    hasAnswerOptions: boolean;
    isApestQuestion: boolean;
}>;
export declare const userAssessmentResponseSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    assessmentId: z.ZodString;
    startedAt: z.ZodString;
    completedAt: z.ZodNullable<z.ZodString>;
    completionPercentage: z.ZodNumber;
    rawScores: z.ZodRecord<z.ZodString, z.ZodNumber>;
    totalScore: z.ZodNumber;
    maxPossibleScore: z.ZodNumber;
    apostolicScore: z.ZodNumber;
    propheticScore: z.ZodNumber;
    evangelisticScore: z.ZodNumber;
    shepherdingScore: z.ZodNumber;
    teachingScore: z.ZodNumber;
    normalizedScores: z.ZodRecord<z.ZodString, z.ZodNumber>;
    primaryGift: z.ZodString;
    secondaryGift: z.ZodString;
    responseConsistency: z.ZodNullable<z.ZodString>;
    completionTime: z.ZodNumber;
    confidenceLevel: z.ZodNumber;
    culturalAdjustmentApplied: z.ZodBoolean;
    culturalAdjustmentFactor: z.ZodString;
    aiInsights: z.ZodString;
    personalizedRecommendations: z.ZodObject<{
        strengths: z.ZodArray<z.ZodString, "many">;
        growthAreas: z.ZodArray<z.ZodString, "many">;
        actionItems: z.ZodArray<z.ZodString, "many">;
        contentRecommendations: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        strengths: string[];
        growthAreas: string[];
        actionItems: string[];
        contentRecommendations: string[];
    }, {
        strengths: string[];
        growthAreas: string[];
        actionItems: string[];
        contentRecommendations: string[];
    }>;
    suggestedPeers: z.ZodArray<z.ZodString, "many">;
    complementaryGifts: z.ZodArray<z.ZodString, "many">;
    isCompleted: z.ZodBoolean;
    isInProgress: z.ZodBoolean;
    completionTimeText: z.ZodString;
    scorePercentage: z.ZodNumber;
    apestScores: z.ZodObject<{
        apostolic: z.ZodNumber;
        prophetic: z.ZodNumber;
        evangelistic: z.ZodNumber;
        shepherding: z.ZodNumber;
        teaching: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        apostolic: number;
        prophetic: number;
        evangelistic: number;
        shepherding: number;
        teaching: number;
    }, {
        apostolic: number;
        prophetic: number;
        evangelistic: number;
        shepherding: number;
        teaching: number;
    }>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    assessmentId: string;
    startedAt: string;
    completedAt: string | null;
    isCompleted: boolean;
    rawScores: Record<string, number>;
    totalScore: number;
    maxPossibleScore: number;
    normalizedScores: Record<string, number>;
    apestScores: {
        apostolic: number;
        prophetic: number;
        evangelistic: number;
        shepherding: number;
        teaching: number;
    };
    primaryGift: string;
    secondaryGift: string;
    completionPercentage: number;
    responseConsistency: string | null;
    apostolicScore: number;
    propheticScore: number;
    evangelisticScore: number;
    shepherdingScore: number;
    teachingScore: number;
    completionTime: number;
    confidenceLevel: number;
    culturalAdjustmentApplied: boolean;
    culturalAdjustmentFactor: string;
    aiInsights: string;
    personalizedRecommendations: {
        strengths: string[];
        growthAreas: string[];
        actionItems: string[];
        contentRecommendations: string[];
    };
    suggestedPeers: string[];
    complementaryGifts: string[];
    isInProgress: boolean;
    completionTimeText: string;
    scorePercentage: number;
}, {
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    assessmentId: string;
    startedAt: string;
    completedAt: string | null;
    isCompleted: boolean;
    rawScores: Record<string, number>;
    totalScore: number;
    maxPossibleScore: number;
    normalizedScores: Record<string, number>;
    apestScores: {
        apostolic: number;
        prophetic: number;
        evangelistic: number;
        shepherding: number;
        teaching: number;
    };
    primaryGift: string;
    secondaryGift: string;
    completionPercentage: number;
    responseConsistency: string | null;
    apostolicScore: number;
    propheticScore: number;
    evangelisticScore: number;
    shepherdingScore: number;
    teachingScore: number;
    completionTime: number;
    confidenceLevel: number;
    culturalAdjustmentApplied: boolean;
    culturalAdjustmentFactor: string;
    aiInsights: string;
    personalizedRecommendations: {
        strengths: string[];
        growthAreas: string[];
        actionItems: string[];
        contentRecommendations: string[];
    };
    suggestedPeers: string[];
    complementaryGifts: string[];
    isInProgress: boolean;
    completionTimeText: string;
    scorePercentage: number;
}>;
export declare const assessmentResponseResponseSchema: z.ZodObject<{
    id: z.ZodString;
    userAssessmentId: z.ZodString;
    questionId: z.ZodString;
    responseValue: z.ZodNullable<z.ZodNumber>;
    responseText: z.ZodNullable<z.ZodString>;
    responseTime: z.ZodNumber;
    confidence: z.ZodNumber;
    skipped: z.ZodBoolean;
    hasResponse: z.ZodBoolean;
    responseTimeText: z.ZodString;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt: string;
    updatedAt: string;
    questionId: string;
    confidence: number;
    userAssessmentId: string;
    responseValue: number | null;
    responseText: string | null;
    responseTime: number;
    skipped: boolean;
    hasResponse: boolean;
    responseTimeText: string;
}, {
    id: string;
    createdAt: string;
    updatedAt: string;
    questionId: string;
    confidence: number;
    userAssessmentId: string;
    responseValue: number | null;
    responseText: string | null;
    responseTime: number;
    skipped: boolean;
    hasResponse: boolean;
    responseTimeText: string;
}>;
export declare const assessmentWithQuestionsResponseSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    slug: z.ZodString;
    description: z.ZodString;
    assessmentType: z.ZodEnum<["apest", "mdna", "cultural_intelligence", "leadership_style", "spiritual_gifts", "other"]>;
    questionsCount: z.ZodNumber;
    estimatedDuration: z.ZodNullable<z.ZodNumber>;
    passingScore: z.ZodNullable<z.ZodNumber>;
    version: z.ZodString;
    language: z.ZodString;
    culturalAdaptation: z.ZodEnum<["western", "eastern", "african", "latin_american", "middle_eastern", "oceanic", "universal", "global"]>;
    researchBacked: z.ZodBoolean;
    validityScore: z.ZodString;
    reliabilityScore: z.ZodString;
    instructions: z.ZodString;
    scoringMethod: z.ZodEnum<["likert_5", "likert_7", "binary", "ranking", "weighted"]>;
    status: z.ZodEnum<["draft", "active", "archived", "under_review"]>;
    isPublished: z.ZodBoolean;
    isActive: z.ZodBoolean;
    estimatedDurationText: z.ZodString;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
    publishedAt: z.ZodNullable<z.ZodString>;
} & {
    questions: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        assessmentId: z.ZodString;
        questionText: z.ZodString;
        questionType: z.ZodEnum<["likert", "multiple_choice", "binary", "ranking", "text"]>;
        orderIndex: z.ZodNumber;
        isRequired: z.ZodBoolean;
        category: z.ZodString;
        weight: z.ZodNumber;
        reverseScored: z.ZodBoolean;
        apestDimension: z.ZodNullable<z.ZodEnum<["apostolic", "prophetic", "evangelistic", "shepherding", "teaching"]>>;
        answerOptions: z.ZodArray<z.ZodObject<{
            value: z.ZodNumber;
            label: z.ZodString;
            description: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description: string;
            value: number;
            label: string;
        }, {
            description: string;
            value: number;
            label: string;
        }>, "many">;
        hasAnswerOptions: z.ZodBoolean;
        isApestQuestion: z.ZodBoolean;
        createdAt: z.ZodString;
        updatedAt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        orderIndex: number;
        createdAt: string;
        updatedAt: string;
        category: string;
        questionText: string;
        questionType: "text" | "multiple_choice" | "binary" | "ranking" | "likert";
        assessmentId: string;
        isRequired: boolean;
        weight: number;
        reverseScored: boolean;
        apestDimension: "apostolic" | "prophetic" | "evangelistic" | "shepherding" | "teaching" | null;
        answerOptions: {
            description: string;
            value: number;
            label: string;
        }[];
        hasAnswerOptions: boolean;
        isApestQuestion: boolean;
    }, {
        id: string;
        orderIndex: number;
        createdAt: string;
        updatedAt: string;
        category: string;
        questionText: string;
        questionType: "text" | "multiple_choice" | "binary" | "ranking" | "likert";
        assessmentId: string;
        isRequired: boolean;
        weight: number;
        reverseScored: boolean;
        apestDimension: "apostolic" | "prophetic" | "evangelistic" | "shepherding" | "teaching" | null;
        answerOptions: {
            description: string;
            value: number;
            label: string;
        }[];
        hasAnswerOptions: boolean;
        isApestQuestion: boolean;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    name: string;
    id: string;
    slug: string;
    description: string;
    status: "draft" | "archived" | "under_review" | "active";
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    isPublished: boolean;
    publishedAt: string | null;
    assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
    questionsCount: number;
    estimatedDuration: number | null;
    passingScore: number | null;
    version: string;
    language: string;
    culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
    researchBacked: boolean;
    validityScore: string;
    reliabilityScore: string;
    instructions: string;
    scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
    questions: {
        id: string;
        orderIndex: number;
        createdAt: string;
        updatedAt: string;
        category: string;
        questionText: string;
        questionType: "text" | "multiple_choice" | "binary" | "ranking" | "likert";
        assessmentId: string;
        isRequired: boolean;
        weight: number;
        reverseScored: boolean;
        apestDimension: "apostolic" | "prophetic" | "evangelistic" | "shepherding" | "teaching" | null;
        answerOptions: {
            description: string;
            value: number;
            label: string;
        }[];
        hasAnswerOptions: boolean;
        isApestQuestion: boolean;
    }[];
    estimatedDurationText: string;
}, {
    name: string;
    id: string;
    slug: string;
    description: string;
    status: "draft" | "archived" | "under_review" | "active";
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    isPublished: boolean;
    publishedAt: string | null;
    assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
    questionsCount: number;
    estimatedDuration: number | null;
    passingScore: number | null;
    version: string;
    language: string;
    culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
    researchBacked: boolean;
    validityScore: string;
    reliabilityScore: string;
    instructions: string;
    scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
    questions: {
        id: string;
        orderIndex: number;
        createdAt: string;
        updatedAt: string;
        category: string;
        questionText: string;
        questionType: "text" | "multiple_choice" | "binary" | "ranking" | "likert";
        assessmentId: string;
        isRequired: boolean;
        weight: number;
        reverseScored: boolean;
        apestDimension: "apostolic" | "prophetic" | "evangelistic" | "shepherding" | "teaching" | null;
        answerOptions: {
            description: string;
            value: number;
            label: string;
        }[];
        hasAnswerOptions: boolean;
        isApestQuestion: boolean;
    }[];
    estimatedDurationText: string;
}>;
export declare const userAssessmentWithDetailsResponseSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    assessmentId: z.ZodString;
    startedAt: z.ZodString;
    completedAt: z.ZodNullable<z.ZodString>;
    completionPercentage: z.ZodNumber;
    rawScores: z.ZodRecord<z.ZodString, z.ZodNumber>;
    totalScore: z.ZodNumber;
    maxPossibleScore: z.ZodNumber;
    apostolicScore: z.ZodNumber;
    propheticScore: z.ZodNumber;
    evangelisticScore: z.ZodNumber;
    shepherdingScore: z.ZodNumber;
    teachingScore: z.ZodNumber;
    normalizedScores: z.ZodRecord<z.ZodString, z.ZodNumber>;
    primaryGift: z.ZodString;
    secondaryGift: z.ZodString;
    responseConsistency: z.ZodNullable<z.ZodString>;
    completionTime: z.ZodNumber;
    confidenceLevel: z.ZodNumber;
    culturalAdjustmentApplied: z.ZodBoolean;
    culturalAdjustmentFactor: z.ZodString;
    aiInsights: z.ZodString;
    personalizedRecommendations: z.ZodObject<{
        strengths: z.ZodArray<z.ZodString, "many">;
        growthAreas: z.ZodArray<z.ZodString, "many">;
        actionItems: z.ZodArray<z.ZodString, "many">;
        contentRecommendations: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        strengths: string[];
        growthAreas: string[];
        actionItems: string[];
        contentRecommendations: string[];
    }, {
        strengths: string[];
        growthAreas: string[];
        actionItems: string[];
        contentRecommendations: string[];
    }>;
    suggestedPeers: z.ZodArray<z.ZodString, "many">;
    complementaryGifts: z.ZodArray<z.ZodString, "many">;
    isCompleted: z.ZodBoolean;
    isInProgress: z.ZodBoolean;
    completionTimeText: z.ZodString;
    scorePercentage: z.ZodNumber;
    apestScores: z.ZodObject<{
        apostolic: z.ZodNumber;
        prophetic: z.ZodNumber;
        evangelistic: z.ZodNumber;
        shepherding: z.ZodNumber;
        teaching: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        apostolic: number;
        prophetic: number;
        evangelistic: number;
        shepherding: number;
        teaching: number;
    }, {
        apostolic: number;
        prophetic: number;
        evangelistic: number;
        shepherding: number;
        teaching: number;
    }>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
} & {
    assessment: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        slug: z.ZodString;
        assessmentType: z.ZodEnum<["apest", "mdna", "cultural_intelligence", "leadership_style", "spiritual_gifts", "other"]>;
        questionsCount: z.ZodNumber;
        estimatedDuration: z.ZodNullable<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        id: string;
        slug: string;
        assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
        questionsCount: number;
        estimatedDuration: number | null;
    }, {
        name: string;
        id: string;
        slug: string;
        assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
        questionsCount: number;
        estimatedDuration: number | null;
    }>;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    assessment: {
        name: string;
        id: string;
        slug: string;
        assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
        questionsCount: number;
        estimatedDuration: number | null;
    };
    assessmentId: string;
    startedAt: string;
    completedAt: string | null;
    isCompleted: boolean;
    rawScores: Record<string, number>;
    totalScore: number;
    maxPossibleScore: number;
    normalizedScores: Record<string, number>;
    apestScores: {
        apostolic: number;
        prophetic: number;
        evangelistic: number;
        shepherding: number;
        teaching: number;
    };
    primaryGift: string;
    secondaryGift: string;
    completionPercentage: number;
    responseConsistency: string | null;
    apostolicScore: number;
    propheticScore: number;
    evangelisticScore: number;
    shepherdingScore: number;
    teachingScore: number;
    completionTime: number;
    confidenceLevel: number;
    culturalAdjustmentApplied: boolean;
    culturalAdjustmentFactor: string;
    aiInsights: string;
    personalizedRecommendations: {
        strengths: string[];
        growthAreas: string[];
        actionItems: string[];
        contentRecommendations: string[];
    };
    suggestedPeers: string[];
    complementaryGifts: string[];
    isInProgress: boolean;
    completionTimeText: string;
    scorePercentage: number;
}, {
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    assessment: {
        name: string;
        id: string;
        slug: string;
        assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
        questionsCount: number;
        estimatedDuration: number | null;
    };
    assessmentId: string;
    startedAt: string;
    completedAt: string | null;
    isCompleted: boolean;
    rawScores: Record<string, number>;
    totalScore: number;
    maxPossibleScore: number;
    normalizedScores: Record<string, number>;
    apestScores: {
        apostolic: number;
        prophetic: number;
        evangelistic: number;
        shepherding: number;
        teaching: number;
    };
    primaryGift: string;
    secondaryGift: string;
    completionPercentage: number;
    responseConsistency: string | null;
    apostolicScore: number;
    propheticScore: number;
    evangelisticScore: number;
    shepherdingScore: number;
    teachingScore: number;
    completionTime: number;
    confidenceLevel: number;
    culturalAdjustmentApplied: boolean;
    culturalAdjustmentFactor: string;
    aiInsights: string;
    personalizedRecommendations: {
        strengths: string[];
        growthAreas: string[];
        actionItems: string[];
        contentRecommendations: string[];
    };
    suggestedPeers: string[];
    complementaryGifts: string[];
    isInProgress: boolean;
    completionTimeText: string;
    scorePercentage: number;
}>;
export declare const paginatedAssessmentListResponseSchema: z.ZodObject<{
    items: z.ZodObject<{
        data: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            slug: z.ZodString;
            description: z.ZodString;
            assessmentType: z.ZodEnum<["apest", "mdna", "cultural_intelligence", "leadership_style", "spiritual_gifts", "other"]>;
            questionsCount: z.ZodNumber;
            estimatedDuration: z.ZodNullable<z.ZodNumber>;
            passingScore: z.ZodNullable<z.ZodNumber>;
            version: z.ZodString;
            language: z.ZodString;
            culturalAdaptation: z.ZodEnum<["western", "eastern", "african", "latin_american", "middle_eastern", "oceanic", "universal", "global"]>;
            researchBacked: z.ZodBoolean;
            validityScore: z.ZodString;
            reliabilityScore: z.ZodString;
            instructions: z.ZodString;
            scoringMethod: z.ZodEnum<["likert_5", "likert_7", "binary", "ranking", "weighted"]>;
            status: z.ZodEnum<["draft", "active", "archived", "under_review"]>;
            isPublished: z.ZodBoolean;
            isActive: z.ZodBoolean;
            estimatedDurationText: z.ZodString;
            createdAt: z.ZodString;
            updatedAt: z.ZodString;
            publishedAt: z.ZodNullable<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            name: string;
            id: string;
            slug: string;
            description: string;
            status: "draft" | "archived" | "under_review" | "active";
            isActive: boolean;
            createdAt: string;
            updatedAt: string;
            isPublished: boolean;
            publishedAt: string | null;
            assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
            questionsCount: number;
            estimatedDuration: number | null;
            passingScore: number | null;
            version: string;
            language: string;
            culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
            researchBacked: boolean;
            validityScore: string;
            reliabilityScore: string;
            instructions: string;
            scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
            estimatedDurationText: string;
        }, {
            name: string;
            id: string;
            slug: string;
            description: string;
            status: "draft" | "archived" | "under_review" | "active";
            isActive: boolean;
            createdAt: string;
            updatedAt: string;
            isPublished: boolean;
            publishedAt: string | null;
            assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
            questionsCount: number;
            estimatedDuration: number | null;
            passingScore: number | null;
            version: string;
            language: string;
            culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
            researchBacked: boolean;
            validityScore: string;
            reliabilityScore: string;
            instructions: string;
            scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
            estimatedDurationText: string;
        }>, "many">;
        pagination: z.ZodObject<{
            page: z.ZodNumber;
            limit: z.ZodNumber;
            total: z.ZodNumber;
            totalPages: z.ZodNumber;
            hasNext: z.ZodBoolean;
            hasPrev: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        }, {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        }>;
    }, "strip", z.ZodTypeAny, {
        data: {
            name: string;
            id: string;
            slug: string;
            description: string;
            status: "draft" | "archived" | "under_review" | "active";
            isActive: boolean;
            createdAt: string;
            updatedAt: string;
            isPublished: boolean;
            publishedAt: string | null;
            assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
            questionsCount: number;
            estimatedDuration: number | null;
            passingScore: number | null;
            version: string;
            language: string;
            culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
            researchBacked: boolean;
            validityScore: string;
            reliabilityScore: string;
            instructions: string;
            scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
            estimatedDurationText: string;
        }[];
        pagination: {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        };
    }, {
        data: {
            name: string;
            id: string;
            slug: string;
            description: string;
            status: "draft" | "archived" | "under_review" | "active";
            isActive: boolean;
            createdAt: string;
            updatedAt: string;
            isPublished: boolean;
            publishedAt: string | null;
            assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
            questionsCount: number;
            estimatedDuration: number | null;
            passingScore: number | null;
            version: string;
            language: string;
            culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
            researchBacked: boolean;
            validityScore: string;
            reliabilityScore: string;
            instructions: string;
            scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
            estimatedDurationText: string;
        }[];
        pagination: {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        };
    }>;
    success: z.ZodBoolean;
    message: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    success: boolean;
    items: {
        data: {
            name: string;
            id: string;
            slug: string;
            description: string;
            status: "draft" | "archived" | "under_review" | "active";
            isActive: boolean;
            createdAt: string;
            updatedAt: string;
            isPublished: boolean;
            publishedAt: string | null;
            assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
            questionsCount: number;
            estimatedDuration: number | null;
            passingScore: number | null;
            version: string;
            language: string;
            culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
            researchBacked: boolean;
            validityScore: string;
            reliabilityScore: string;
            instructions: string;
            scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
            estimatedDurationText: string;
        }[];
        pagination: {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        };
    };
    message?: string | undefined;
}, {
    success: boolean;
    items: {
        data: {
            name: string;
            id: string;
            slug: string;
            description: string;
            status: "draft" | "archived" | "under_review" | "active";
            isActive: boolean;
            createdAt: string;
            updatedAt: string;
            isPublished: boolean;
            publishedAt: string | null;
            assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
            questionsCount: number;
            estimatedDuration: number | null;
            passingScore: number | null;
            version: string;
            language: string;
            culturalAdaptation: "global" | "universal" | "western" | "eastern" | "african" | "latin_american" | "middle_eastern" | "oceanic";
            researchBacked: boolean;
            validityScore: string;
            reliabilityScore: string;
            instructions: string;
            scoringMethod: "likert_5" | "likert_7" | "binary" | "ranking" | "weighted";
            estimatedDurationText: string;
        }[];
        pagination: {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        };
    };
    message?: string | undefined;
}>;
export declare const paginatedUserAssessmentListResponseSchema: z.ZodObject<{
    items: z.ZodObject<{
        data: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            userId: z.ZodString;
            assessmentId: z.ZodString;
            startedAt: z.ZodString;
            completedAt: z.ZodNullable<z.ZodString>;
            completionPercentage: z.ZodNumber;
            rawScores: z.ZodRecord<z.ZodString, z.ZodNumber>;
            totalScore: z.ZodNumber;
            maxPossibleScore: z.ZodNumber;
            apostolicScore: z.ZodNumber;
            propheticScore: z.ZodNumber;
            evangelisticScore: z.ZodNumber;
            shepherdingScore: z.ZodNumber;
            teachingScore: z.ZodNumber;
            normalizedScores: z.ZodRecord<z.ZodString, z.ZodNumber>;
            primaryGift: z.ZodString;
            secondaryGift: z.ZodString;
            responseConsistency: z.ZodNullable<z.ZodString>;
            completionTime: z.ZodNumber;
            confidenceLevel: z.ZodNumber;
            culturalAdjustmentApplied: z.ZodBoolean;
            culturalAdjustmentFactor: z.ZodString;
            aiInsights: z.ZodString;
            personalizedRecommendations: z.ZodObject<{
                strengths: z.ZodArray<z.ZodString, "many">;
                growthAreas: z.ZodArray<z.ZodString, "many">;
                actionItems: z.ZodArray<z.ZodString, "many">;
                contentRecommendations: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                strengths: string[];
                growthAreas: string[];
                actionItems: string[];
                contentRecommendations: string[];
            }, {
                strengths: string[];
                growthAreas: string[];
                actionItems: string[];
                contentRecommendations: string[];
            }>;
            suggestedPeers: z.ZodArray<z.ZodString, "many">;
            complementaryGifts: z.ZodArray<z.ZodString, "many">;
            isCompleted: z.ZodBoolean;
            isInProgress: z.ZodBoolean;
            completionTimeText: z.ZodString;
            scorePercentage: z.ZodNumber;
            apestScores: z.ZodObject<{
                apostolic: z.ZodNumber;
                prophetic: z.ZodNumber;
                evangelistic: z.ZodNumber;
                shepherding: z.ZodNumber;
                teaching: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                apostolic: number;
                prophetic: number;
                evangelistic: number;
                shepherding: number;
                teaching: number;
            }, {
                apostolic: number;
                prophetic: number;
                evangelistic: number;
                shepherding: number;
                teaching: number;
            }>;
            createdAt: z.ZodString;
            updatedAt: z.ZodString;
        } & {
            assessment: z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                slug: z.ZodString;
                assessmentType: z.ZodEnum<["apest", "mdna", "cultural_intelligence", "leadership_style", "spiritual_gifts", "other"]>;
                questionsCount: z.ZodNumber;
                estimatedDuration: z.ZodNullable<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                name: string;
                id: string;
                slug: string;
                assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
                questionsCount: number;
                estimatedDuration: number | null;
            }, {
                name: string;
                id: string;
                slug: string;
                assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
                questionsCount: number;
                estimatedDuration: number | null;
            }>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            createdAt: string;
            updatedAt: string;
            userId: string;
            assessment: {
                name: string;
                id: string;
                slug: string;
                assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
                questionsCount: number;
                estimatedDuration: number | null;
            };
            assessmentId: string;
            startedAt: string;
            completedAt: string | null;
            isCompleted: boolean;
            rawScores: Record<string, number>;
            totalScore: number;
            maxPossibleScore: number;
            normalizedScores: Record<string, number>;
            apestScores: {
                apostolic: number;
                prophetic: number;
                evangelistic: number;
                shepherding: number;
                teaching: number;
            };
            primaryGift: string;
            secondaryGift: string;
            completionPercentage: number;
            responseConsistency: string | null;
            apostolicScore: number;
            propheticScore: number;
            evangelisticScore: number;
            shepherdingScore: number;
            teachingScore: number;
            completionTime: number;
            confidenceLevel: number;
            culturalAdjustmentApplied: boolean;
            culturalAdjustmentFactor: string;
            aiInsights: string;
            personalizedRecommendations: {
                strengths: string[];
                growthAreas: string[];
                actionItems: string[];
                contentRecommendations: string[];
            };
            suggestedPeers: string[];
            complementaryGifts: string[];
            isInProgress: boolean;
            completionTimeText: string;
            scorePercentage: number;
        }, {
            id: string;
            createdAt: string;
            updatedAt: string;
            userId: string;
            assessment: {
                name: string;
                id: string;
                slug: string;
                assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
                questionsCount: number;
                estimatedDuration: number | null;
            };
            assessmentId: string;
            startedAt: string;
            completedAt: string | null;
            isCompleted: boolean;
            rawScores: Record<string, number>;
            totalScore: number;
            maxPossibleScore: number;
            normalizedScores: Record<string, number>;
            apestScores: {
                apostolic: number;
                prophetic: number;
                evangelistic: number;
                shepherding: number;
                teaching: number;
            };
            primaryGift: string;
            secondaryGift: string;
            completionPercentage: number;
            responseConsistency: string | null;
            apostolicScore: number;
            propheticScore: number;
            evangelisticScore: number;
            shepherdingScore: number;
            teachingScore: number;
            completionTime: number;
            confidenceLevel: number;
            culturalAdjustmentApplied: boolean;
            culturalAdjustmentFactor: string;
            aiInsights: string;
            personalizedRecommendations: {
                strengths: string[];
                growthAreas: string[];
                actionItems: string[];
                contentRecommendations: string[];
            };
            suggestedPeers: string[];
            complementaryGifts: string[];
            isInProgress: boolean;
            completionTimeText: string;
            scorePercentage: number;
        }>, "many">;
        pagination: z.ZodObject<{
            page: z.ZodNumber;
            limit: z.ZodNumber;
            total: z.ZodNumber;
            totalPages: z.ZodNumber;
            hasNext: z.ZodBoolean;
            hasPrev: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        }, {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        }>;
    }, "strip", z.ZodTypeAny, {
        data: {
            id: string;
            createdAt: string;
            updatedAt: string;
            userId: string;
            assessment: {
                name: string;
                id: string;
                slug: string;
                assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
                questionsCount: number;
                estimatedDuration: number | null;
            };
            assessmentId: string;
            startedAt: string;
            completedAt: string | null;
            isCompleted: boolean;
            rawScores: Record<string, number>;
            totalScore: number;
            maxPossibleScore: number;
            normalizedScores: Record<string, number>;
            apestScores: {
                apostolic: number;
                prophetic: number;
                evangelistic: number;
                shepherding: number;
                teaching: number;
            };
            primaryGift: string;
            secondaryGift: string;
            completionPercentage: number;
            responseConsistency: string | null;
            apostolicScore: number;
            propheticScore: number;
            evangelisticScore: number;
            shepherdingScore: number;
            teachingScore: number;
            completionTime: number;
            confidenceLevel: number;
            culturalAdjustmentApplied: boolean;
            culturalAdjustmentFactor: string;
            aiInsights: string;
            personalizedRecommendations: {
                strengths: string[];
                growthAreas: string[];
                actionItems: string[];
                contentRecommendations: string[];
            };
            suggestedPeers: string[];
            complementaryGifts: string[];
            isInProgress: boolean;
            completionTimeText: string;
            scorePercentage: number;
        }[];
        pagination: {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        };
    }, {
        data: {
            id: string;
            createdAt: string;
            updatedAt: string;
            userId: string;
            assessment: {
                name: string;
                id: string;
                slug: string;
                assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
                questionsCount: number;
                estimatedDuration: number | null;
            };
            assessmentId: string;
            startedAt: string;
            completedAt: string | null;
            isCompleted: boolean;
            rawScores: Record<string, number>;
            totalScore: number;
            maxPossibleScore: number;
            normalizedScores: Record<string, number>;
            apestScores: {
                apostolic: number;
                prophetic: number;
                evangelistic: number;
                shepherding: number;
                teaching: number;
            };
            primaryGift: string;
            secondaryGift: string;
            completionPercentage: number;
            responseConsistency: string | null;
            apostolicScore: number;
            propheticScore: number;
            evangelisticScore: number;
            shepherdingScore: number;
            teachingScore: number;
            completionTime: number;
            confidenceLevel: number;
            culturalAdjustmentApplied: boolean;
            culturalAdjustmentFactor: string;
            aiInsights: string;
            personalizedRecommendations: {
                strengths: string[];
                growthAreas: string[];
                actionItems: string[];
                contentRecommendations: string[];
            };
            suggestedPeers: string[];
            complementaryGifts: string[];
            isInProgress: boolean;
            completionTimeText: string;
            scorePercentage: number;
        }[];
        pagination: {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        };
    }>;
    success: z.ZodBoolean;
    message: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    success: boolean;
    items: {
        data: {
            id: string;
            createdAt: string;
            updatedAt: string;
            userId: string;
            assessment: {
                name: string;
                id: string;
                slug: string;
                assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
                questionsCount: number;
                estimatedDuration: number | null;
            };
            assessmentId: string;
            startedAt: string;
            completedAt: string | null;
            isCompleted: boolean;
            rawScores: Record<string, number>;
            totalScore: number;
            maxPossibleScore: number;
            normalizedScores: Record<string, number>;
            apestScores: {
                apostolic: number;
                prophetic: number;
                evangelistic: number;
                shepherding: number;
                teaching: number;
            };
            primaryGift: string;
            secondaryGift: string;
            completionPercentage: number;
            responseConsistency: string | null;
            apostolicScore: number;
            propheticScore: number;
            evangelisticScore: number;
            shepherdingScore: number;
            teachingScore: number;
            completionTime: number;
            confidenceLevel: number;
            culturalAdjustmentApplied: boolean;
            culturalAdjustmentFactor: string;
            aiInsights: string;
            personalizedRecommendations: {
                strengths: string[];
                growthAreas: string[];
                actionItems: string[];
                contentRecommendations: string[];
            };
            suggestedPeers: string[];
            complementaryGifts: string[];
            isInProgress: boolean;
            completionTimeText: string;
            scorePercentage: number;
        }[];
        pagination: {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        };
    };
    message?: string | undefined;
}, {
    success: boolean;
    items: {
        data: {
            id: string;
            createdAt: string;
            updatedAt: string;
            userId: string;
            assessment: {
                name: string;
                id: string;
                slug: string;
                assessmentType: "other" | "apest" | "mdna" | "cultural_intelligence" | "leadership_style" | "spiritual_gifts";
                questionsCount: number;
                estimatedDuration: number | null;
            };
            assessmentId: string;
            startedAt: string;
            completedAt: string | null;
            isCompleted: boolean;
            rawScores: Record<string, number>;
            totalScore: number;
            maxPossibleScore: number;
            normalizedScores: Record<string, number>;
            apestScores: {
                apostolic: number;
                prophetic: number;
                evangelistic: number;
                shepherding: number;
                teaching: number;
            };
            primaryGift: string;
            secondaryGift: string;
            completionPercentage: number;
            responseConsistency: string | null;
            apostolicScore: number;
            propheticScore: number;
            evangelisticScore: number;
            shepherdingScore: number;
            teachingScore: number;
            completionTime: number;
            confidenceLevel: number;
            culturalAdjustmentApplied: boolean;
            culturalAdjustmentFactor: string;
            aiInsights: string;
            personalizedRecommendations: {
                strengths: string[];
                growthAreas: string[];
                actionItems: string[];
                contentRecommendations: string[];
            };
            suggestedPeers: string[];
            complementaryGifts: string[];
            isInProgress: boolean;
            completionTimeText: string;
            scorePercentage: number;
        }[];
        pagination: {
            limit: number;
            total: number;
            page: number;
            totalPages: number;
            hasNext: boolean;
            hasPrev: boolean;
        };
    };
    message?: string | undefined;
}>;
export type AssessmentResponse = z.infer<typeof assessmentResponseSchema>;
export type AssessmentQuestionResponse = z.infer<typeof assessmentQuestionResponseSchema>;
export type UserAssessmentResponse = z.infer<typeof userAssessmentResponseSchema>;
export type AssessmentResponseResponse = z.infer<typeof assessmentResponseResponseSchema>;
export type AssessmentWithQuestionsResponse = z.infer<typeof assessmentWithQuestionsResponseSchema>;
export type UserAssessmentWithDetailsResponse = z.infer<typeof userAssessmentWithDetailsResponseSchema>;
export type PaginatedAssessmentListResponse = z.infer<typeof paginatedAssessmentListResponseSchema>;
export type PaginatedUserAssessmentListResponse = z.infer<typeof paginatedUserAssessmentListResponseSchema>;
//# sourceMappingURL=assessments.response.d.ts.map