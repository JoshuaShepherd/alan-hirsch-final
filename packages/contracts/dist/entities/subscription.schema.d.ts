import { z } from 'zod';
export declare const subscriptionPlanEntitySchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    price: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    interval: z.ZodEnum<["monthly", "yearly", "lifetime"]>;
    features: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    maxUsers: z.ZodOptional<z.ZodNumber>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    stripeProductId: z.ZodOptional<z.ZodString>;
    stripePriceId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    name: string;
    id: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    price: number;
    currency: string;
    interval: "monthly" | "yearly" | "lifetime";
    features: string[];
    description?: string | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    stripePriceId?: string | undefined;
}, {
    name: string;
    id: string;
    createdAt: string;
    updatedAt: string;
    price: number;
    interval: "monthly" | "yearly" | "lifetime";
    description?: string | undefined;
    isActive?: boolean | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    currency?: string | undefined;
    features?: string[] | undefined;
    stripePriceId?: string | undefined;
}>;
export declare const userSubscriptionEntitySchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    planId: z.ZodString;
    status: z.ZodEnum<["active", "cancelled", "past_due", "unpaid", "trialing", "paused"]>;
    currentPeriodStart: z.ZodString;
    currentPeriodEnd: z.ZodString;
    cancelAtPeriodEnd: z.ZodDefault<z.ZodBoolean>;
    cancelledAt: z.ZodOptional<z.ZodString>;
    stripeSubscriptionId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    status: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    planId: string;
    currentPeriodStart: string;
    currentPeriodEnd: string;
    cancelAtPeriodEnd: boolean;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}, {
    status: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    planId: string;
    currentPeriodStart: string;
    currentPeriodEnd: string;
    cancelAtPeriodEnd?: boolean | undefined;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}>;
export declare const paymentMethodEntitySchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    type: z.ZodEnum<["card", "bank_account", "paypal"]>;
    last4: z.ZodOptional<z.ZodString>;
    brand: z.ZodOptional<z.ZodString>;
    expiryMonth: z.ZodOptional<z.ZodNumber>;
    expiryYear: z.ZodOptional<z.ZodNumber>;
    isDefault: z.ZodDefault<z.ZodBoolean>;
    stripePaymentMethodId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "card" | "bank_account" | "paypal";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    isDefault: boolean;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    stripePaymentMethodId?: string | undefined;
}, {
    type: "card" | "bank_account" | "paypal";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    isDefault?: boolean | undefined;
    stripePaymentMethodId?: string | undefined;
}>;
export declare const transactionEntitySchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    subscriptionId: z.ZodOptional<z.ZodString>;
    amount: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    status: z.ZodEnum<["pending", "completed", "failed", "refunded"]>;
    type: z.ZodEnum<["subscription", "one_time", "refund"]>;
    description: z.ZodOptional<z.ZodString>;
    stripePaymentIntentId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "subscription" | "one_time" | "refund";
    status: "completed" | "pending" | "failed" | "refunded";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    currency: string;
    amount: number;
    description?: string | undefined;
    subscriptionId?: string | undefined;
    stripePaymentIntentId?: string | undefined;
}, {
    type: "subscription" | "one_time" | "refund";
    status: "completed" | "pending" | "failed" | "refunded";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    amount: number;
    description?: string | undefined;
    currency?: string | undefined;
    subscriptionId?: string | undefined;
    stripePaymentIntentId?: string | undefined;
}>;
export declare const couponEntitySchema: z.ZodObject<{
    id: z.ZodString;
    code: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodEnum<["percentage", "fixed_amount"]>;
    value: z.ZodNumber;
    currency: z.ZodOptional<z.ZodString>;
    maxRedemptions: z.ZodOptional<z.ZodNumber>;
    timesRedeemed: z.ZodDefault<z.ZodNumber>;
    validFrom: z.ZodString;
    validUntil: z.ZodOptional<z.ZodString>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "percentage" | "fixed_amount";
    value: number;
    code: string;
    id: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    timesRedeemed: number;
    validFrom: string;
    description?: string | undefined;
    currency?: string | undefined;
    maxRedemptions?: number | undefined;
    validUntil?: string | undefined;
}, {
    type: "percentage" | "fixed_amount";
    value: number;
    code: string;
    id: string;
    createdAt: string;
    updatedAt: string;
    validFrom: string;
    description?: string | undefined;
    isActive?: boolean | undefined;
    currency?: string | undefined;
    maxRedemptions?: number | undefined;
    timesRedeemed?: number | undefined;
    validUntil?: string | undefined;
}>;
export declare const createSubscriptionPlanSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    price: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    interval: z.ZodEnum<["monthly", "yearly", "lifetime"]>;
    features: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    maxUsers: z.ZodOptional<z.ZodNumber>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    stripeProductId: z.ZodOptional<z.ZodString>;
    stripePriceId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    name: string;
    isActive: boolean;
    price: number;
    currency: string;
    interval: "monthly" | "yearly" | "lifetime";
    features: string[];
    description?: string | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    stripePriceId?: string | undefined;
}, {
    name: string;
    price: number;
    interval: "monthly" | "yearly" | "lifetime";
    description?: string | undefined;
    isActive?: boolean | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    currency?: string | undefined;
    features?: string[] | undefined;
    stripePriceId?: string | undefined;
}>;
export declare const createUserSubscriptionSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    userId: z.ZodString;
    planId: z.ZodString;
    status: z.ZodEnum<["active", "cancelled", "past_due", "unpaid", "trialing", "paused"]>;
    currentPeriodStart: z.ZodString;
    currentPeriodEnd: z.ZodString;
    cancelAtPeriodEnd: z.ZodDefault<z.ZodBoolean>;
    cancelledAt: z.ZodOptional<z.ZodString>;
    stripeSubscriptionId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    status: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused";
    userId: string;
    planId: string;
    currentPeriodStart: string;
    currentPeriodEnd: string;
    cancelAtPeriodEnd: boolean;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}, {
    status: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused";
    userId: string;
    planId: string;
    currentPeriodStart: string;
    currentPeriodEnd: string;
    cancelAtPeriodEnd?: boolean | undefined;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}>;
export declare const createPaymentMethodSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    userId: z.ZodString;
    type: z.ZodEnum<["card", "bank_account", "paypal"]>;
    last4: z.ZodOptional<z.ZodString>;
    brand: z.ZodOptional<z.ZodString>;
    expiryMonth: z.ZodOptional<z.ZodNumber>;
    expiryYear: z.ZodOptional<z.ZodNumber>;
    isDefault: z.ZodDefault<z.ZodBoolean>;
    stripePaymentMethodId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    type: "card" | "bank_account" | "paypal";
    userId: string;
    isDefault: boolean;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    stripePaymentMethodId?: string | undefined;
}, {
    type: "card" | "bank_account" | "paypal";
    userId: string;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    isDefault?: boolean | undefined;
    stripePaymentMethodId?: string | undefined;
}>;
export declare const createTransactionSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    userId: z.ZodString;
    subscriptionId: z.ZodOptional<z.ZodString>;
    amount: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    status: z.ZodEnum<["pending", "completed", "failed", "refunded"]>;
    type: z.ZodEnum<["subscription", "one_time", "refund"]>;
    description: z.ZodOptional<z.ZodString>;
    stripePaymentIntentId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    type: "subscription" | "one_time" | "refund";
    status: "completed" | "pending" | "failed" | "refunded";
    userId: string;
    currency: string;
    amount: number;
    description?: string | undefined;
    subscriptionId?: string | undefined;
    stripePaymentIntentId?: string | undefined;
}, {
    type: "subscription" | "one_time" | "refund";
    status: "completed" | "pending" | "failed" | "refunded";
    userId: string;
    amount: number;
    description?: string | undefined;
    currency?: string | undefined;
    subscriptionId?: string | undefined;
    stripePaymentIntentId?: string | undefined;
}>;
export declare const createCouponSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    code: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodEnum<["percentage", "fixed_amount"]>;
    value: z.ZodNumber;
    currency: z.ZodOptional<z.ZodString>;
    maxRedemptions: z.ZodOptional<z.ZodNumber>;
    timesRedeemed: z.ZodDefault<z.ZodNumber>;
    validFrom: z.ZodString;
    validUntil: z.ZodOptional<z.ZodString>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt" | "timesRedeemed">, "strip", z.ZodTypeAny, {
    type: "percentage" | "fixed_amount";
    value: number;
    code: string;
    isActive: boolean;
    validFrom: string;
    description?: string | undefined;
    currency?: string | undefined;
    maxRedemptions?: number | undefined;
    validUntil?: string | undefined;
}, {
    type: "percentage" | "fixed_amount";
    value: number;
    code: string;
    validFrom: string;
    description?: string | undefined;
    isActive?: boolean | undefined;
    currency?: string | undefined;
    maxRedemptions?: number | undefined;
    validUntil?: string | undefined;
}>;
export declare const updateSubscriptionPlanSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    maxUsers: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    stripeProductId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    price: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    interval: z.ZodOptional<z.ZodEnum<["monthly", "yearly", "lifetime"]>>;
    features: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    stripePriceId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    description?: string | undefined;
    isActive?: boolean | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    price?: number | undefined;
    currency?: string | undefined;
    interval?: "monthly" | "yearly" | "lifetime" | undefined;
    features?: string[] | undefined;
    stripePriceId?: string | undefined;
}, {
    name?: string | undefined;
    description?: string | undefined;
    isActive?: boolean | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    price?: number | undefined;
    currency?: string | undefined;
    interval?: "monthly" | "yearly" | "lifetime" | undefined;
    features?: string[] | undefined;
    stripePriceId?: string | undefined;
}>;
export declare const updateUserSubscriptionSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodEnum<["active", "cancelled", "past_due", "unpaid", "trialing", "paused"]>>;
    userId: z.ZodOptional<z.ZodString>;
    planId: z.ZodOptional<z.ZodString>;
    currentPeriodStart: z.ZodOptional<z.ZodString>;
    currentPeriodEnd: z.ZodOptional<z.ZodString>;
    cancelAtPeriodEnd: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    cancelledAt: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    stripeSubscriptionId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    status?: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused" | undefined;
    userId?: string | undefined;
    planId?: string | undefined;
    currentPeriodStart?: string | undefined;
    currentPeriodEnd?: string | undefined;
    cancelAtPeriodEnd?: boolean | undefined;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}, {
    status?: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused" | undefined;
    userId?: string | undefined;
    planId?: string | undefined;
    currentPeriodStart?: string | undefined;
    currentPeriodEnd?: string | undefined;
    cancelAtPeriodEnd?: boolean | undefined;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}>;
export declare const updatePaymentMethodSchema: z.ZodObject<{
    type: z.ZodOptional<z.ZodEnum<["card", "bank_account", "paypal"]>>;
    userId: z.ZodOptional<z.ZodString>;
    last4: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    brand: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    expiryMonth: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    expiryYear: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    isDefault: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    stripePaymentMethodId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    type?: "card" | "bank_account" | "paypal" | undefined;
    userId?: string | undefined;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    isDefault?: boolean | undefined;
    stripePaymentMethodId?: string | undefined;
}, {
    type?: "card" | "bank_account" | "paypal" | undefined;
    userId?: string | undefined;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    isDefault?: boolean | undefined;
    stripePaymentMethodId?: string | undefined;
}>;
export declare const updateTransactionSchema: z.ZodObject<{
    type: z.ZodOptional<z.ZodEnum<["subscription", "one_time", "refund"]>>;
    status: z.ZodOptional<z.ZodEnum<["pending", "completed", "failed", "refunded"]>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    userId: z.ZodOptional<z.ZodString>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    subscriptionId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    amount: z.ZodOptional<z.ZodNumber>;
    stripePaymentIntentId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    type?: "subscription" | "one_time" | "refund" | undefined;
    status?: "completed" | "pending" | "failed" | "refunded" | undefined;
    description?: string | undefined;
    userId?: string | undefined;
    currency?: string | undefined;
    subscriptionId?: string | undefined;
    amount?: number | undefined;
    stripePaymentIntentId?: string | undefined;
}, {
    type?: "subscription" | "one_time" | "refund" | undefined;
    status?: "completed" | "pending" | "failed" | "refunded" | undefined;
    description?: string | undefined;
    userId?: string | undefined;
    currency?: string | undefined;
    subscriptionId?: string | undefined;
    amount?: number | undefined;
    stripePaymentIntentId?: string | undefined;
}>;
export declare const updateCouponSchema: z.ZodObject<{
    type: z.ZodOptional<z.ZodEnum<["percentage", "fixed_amount"]>>;
    value: z.ZodOptional<z.ZodNumber>;
    code: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    currency: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    maxRedemptions: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    validFrom: z.ZodOptional<z.ZodString>;
    validUntil: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    type?: "percentage" | "fixed_amount" | undefined;
    value?: number | undefined;
    code?: string | undefined;
    description?: string | undefined;
    isActive?: boolean | undefined;
    currency?: string | undefined;
    maxRedemptions?: number | undefined;
    validFrom?: string | undefined;
    validUntil?: string | undefined;
}, {
    type?: "percentage" | "fixed_amount" | undefined;
    value?: number | undefined;
    code?: string | undefined;
    description?: string | undefined;
    isActive?: boolean | undefined;
    currency?: string | undefined;
    maxRedemptions?: number | undefined;
    validFrom?: string | undefined;
    validUntil?: string | undefined;
}>;
export type SubscriptionPlanEntity = z.infer<typeof subscriptionPlanEntitySchema>;
export type UserSubscriptionEntity = z.infer<typeof userSubscriptionEntitySchema>;
export type PaymentMethodEntity = z.infer<typeof paymentMethodEntitySchema>;
export type TransactionEntity = z.infer<typeof transactionEntitySchema>;
export type CouponEntity = z.infer<typeof couponEntitySchema>;
export type CreateSubscriptionPlan = z.infer<typeof createSubscriptionPlanSchema>;
export type CreateUserSubscription = z.infer<typeof createUserSubscriptionSchema>;
export type CreatePaymentMethod = z.infer<typeof createPaymentMethodSchema>;
export type CreateTransaction = z.infer<typeof createTransactionSchema>;
export type CreateCoupon = z.infer<typeof createCouponSchema>;
export type UpdateSubscriptionPlan = z.infer<typeof updateSubscriptionPlanSchema>;
export type UpdateUserSubscription = z.infer<typeof updateUserSubscriptionSchema>;
export type UpdatePaymentMethod = z.infer<typeof updatePaymentMethodSchema>;
export type UpdateTransaction = z.infer<typeof updateTransactionSchema>;
export type UpdateCoupon = z.infer<typeof updateCouponSchema>;
export declare const subscriptionPlanSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    price: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    interval: z.ZodEnum<["monthly", "yearly", "lifetime"]>;
    features: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    maxUsers: z.ZodOptional<z.ZodNumber>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    stripeProductId: z.ZodOptional<z.ZodString>;
    stripePriceId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    name: string;
    id: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    price: number;
    currency: string;
    interval: "monthly" | "yearly" | "lifetime";
    features: string[];
    description?: string | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    stripePriceId?: string | undefined;
}, {
    name: string;
    id: string;
    createdAt: string;
    updatedAt: string;
    price: number;
    interval: "monthly" | "yearly" | "lifetime";
    description?: string | undefined;
    isActive?: boolean | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    currency?: string | undefined;
    features?: string[] | undefined;
    stripePriceId?: string | undefined;
}>;
export declare const userSubscriptionSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    planId: z.ZodString;
    status: z.ZodEnum<["active", "cancelled", "past_due", "unpaid", "trialing", "paused"]>;
    currentPeriodStart: z.ZodString;
    currentPeriodEnd: z.ZodString;
    cancelAtPeriodEnd: z.ZodDefault<z.ZodBoolean>;
    cancelledAt: z.ZodOptional<z.ZodString>;
    stripeSubscriptionId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    status: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    planId: string;
    currentPeriodStart: string;
    currentPeriodEnd: string;
    cancelAtPeriodEnd: boolean;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}, {
    status: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    planId: string;
    currentPeriodStart: string;
    currentPeriodEnd: string;
    cancelAtPeriodEnd?: boolean | undefined;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}>;
export declare const transactionSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    subscriptionId: z.ZodOptional<z.ZodString>;
    amount: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    status: z.ZodEnum<["pending", "completed", "failed", "refunded"]>;
    type: z.ZodEnum<["subscription", "one_time", "refund"]>;
    description: z.ZodOptional<z.ZodString>;
    stripePaymentIntentId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "subscription" | "one_time" | "refund";
    status: "completed" | "pending" | "failed" | "refunded";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    currency: string;
    amount: number;
    description?: string | undefined;
    subscriptionId?: string | undefined;
    stripePaymentIntentId?: string | undefined;
}, {
    type: "subscription" | "one_time" | "refund";
    status: "completed" | "pending" | "failed" | "refunded";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    amount: number;
    description?: string | undefined;
    currency?: string | undefined;
    subscriptionId?: string | undefined;
    stripePaymentIntentId?: string | undefined;
}>;
export declare const paymentMethodSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    type: z.ZodEnum<["card", "bank_account", "paypal"]>;
    last4: z.ZodOptional<z.ZodString>;
    brand: z.ZodOptional<z.ZodString>;
    expiryMonth: z.ZodOptional<z.ZodNumber>;
    expiryYear: z.ZodOptional<z.ZodNumber>;
    isDefault: z.ZodDefault<z.ZodBoolean>;
    stripePaymentMethodId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "card" | "bank_account" | "paypal";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    isDefault: boolean;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    stripePaymentMethodId?: string | undefined;
}, {
    type: "card" | "bank_account" | "paypal";
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    isDefault?: boolean | undefined;
    stripePaymentMethodId?: string | undefined;
}>;
export declare const couponSchema: z.ZodObject<{
    id: z.ZodString;
    code: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodEnum<["percentage", "fixed_amount"]>;
    value: z.ZodNumber;
    currency: z.ZodOptional<z.ZodString>;
    maxRedemptions: z.ZodOptional<z.ZodNumber>;
    timesRedeemed: z.ZodDefault<z.ZodNumber>;
    validFrom: z.ZodString;
    validUntil: z.ZodOptional<z.ZodString>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "percentage" | "fixed_amount";
    value: number;
    code: string;
    id: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    timesRedeemed: number;
    validFrom: string;
    description?: string | undefined;
    currency?: string | undefined;
    maxRedemptions?: number | undefined;
    validUntil?: string | undefined;
}, {
    type: "percentage" | "fixed_amount";
    value: number;
    code: string;
    id: string;
    createdAt: string;
    updatedAt: string;
    validFrom: string;
    description?: string | undefined;
    isActive?: boolean | undefined;
    currency?: string | undefined;
    maxRedemptions?: number | undefined;
    timesRedeemed?: number | undefined;
    validUntil?: string | undefined;
}>;
export declare const newPaymentMethodSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    userId: z.ZodString;
    type: z.ZodEnum<["card", "bank_account", "paypal"]>;
    last4: z.ZodOptional<z.ZodString>;
    brand: z.ZodOptional<z.ZodString>;
    expiryMonth: z.ZodOptional<z.ZodNumber>;
    expiryYear: z.ZodOptional<z.ZodNumber>;
    isDefault: z.ZodDefault<z.ZodBoolean>;
    stripePaymentMethodId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    type: "card" | "bank_account" | "paypal";
    userId: string;
    isDefault: boolean;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    stripePaymentMethodId?: string | undefined;
}, {
    type: "card" | "bank_account" | "paypal";
    userId: string;
    last4?: string | undefined;
    brand?: string | undefined;
    expiryMonth?: number | undefined;
    expiryYear?: number | undefined;
    isDefault?: boolean | undefined;
    stripePaymentMethodId?: string | undefined;
}>;
export declare const newSubscriptionPlanSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    price: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    interval: z.ZodEnum<["monthly", "yearly", "lifetime"]>;
    features: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    maxUsers: z.ZodOptional<z.ZodNumber>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    stripeProductId: z.ZodOptional<z.ZodString>;
    stripePriceId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    name: string;
    isActive: boolean;
    price: number;
    currency: string;
    interval: "monthly" | "yearly" | "lifetime";
    features: string[];
    description?: string | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    stripePriceId?: string | undefined;
}, {
    name: string;
    price: number;
    interval: "monthly" | "yearly" | "lifetime";
    description?: string | undefined;
    isActive?: boolean | undefined;
    maxUsers?: number | undefined;
    stripeProductId?: string | undefined;
    currency?: string | undefined;
    features?: string[] | undefined;
    stripePriceId?: string | undefined;
}>;
export declare const newTransactionSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    userId: z.ZodString;
    subscriptionId: z.ZodOptional<z.ZodString>;
    amount: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    status: z.ZodEnum<["pending", "completed", "failed", "refunded"]>;
    type: z.ZodEnum<["subscription", "one_time", "refund"]>;
    description: z.ZodOptional<z.ZodString>;
    stripePaymentIntentId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    type: "subscription" | "one_time" | "refund";
    status: "completed" | "pending" | "failed" | "refunded";
    userId: string;
    currency: string;
    amount: number;
    description?: string | undefined;
    subscriptionId?: string | undefined;
    stripePaymentIntentId?: string | undefined;
}, {
    type: "subscription" | "one_time" | "refund";
    status: "completed" | "pending" | "failed" | "refunded";
    userId: string;
    amount: number;
    description?: string | undefined;
    currency?: string | undefined;
    subscriptionId?: string | undefined;
    stripePaymentIntentId?: string | undefined;
}>;
export declare const newUserSubscriptionSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    userId: z.ZodString;
    planId: z.ZodString;
    status: z.ZodEnum<["active", "cancelled", "past_due", "unpaid", "trialing", "paused"]>;
    currentPeriodStart: z.ZodString;
    currentPeriodEnd: z.ZodString;
    cancelAtPeriodEnd: z.ZodDefault<z.ZodBoolean>;
    cancelledAt: z.ZodOptional<z.ZodString>;
    stripeSubscriptionId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    status: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused";
    userId: string;
    planId: string;
    currentPeriodStart: string;
    currentPeriodEnd: string;
    cancelAtPeriodEnd: boolean;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}, {
    status: "active" | "cancelled" | "past_due" | "unpaid" | "trialing" | "paused";
    userId: string;
    planId: string;
    currentPeriodStart: string;
    currentPeriodEnd: string;
    cancelAtPeriodEnd?: boolean | undefined;
    cancelledAt?: string | undefined;
    stripeSubscriptionId?: string | undefined;
}>;
export type SubscriptionPlan = SubscriptionPlanEntity;
export type UserSubscription = UserSubscriptionEntity;
export type PaymentMethod = PaymentMethodEntity;
export type Transaction = TransactionEntity;
export type Coupon = CouponEntity;
export type NewSubscriptionPlan = CreateSubscriptionPlan;
export type NewUserSubscription = CreateUserSubscription;
export type NewPaymentMethod = CreatePaymentMethod;
export type NewTransaction = CreateTransaction;
export type NewCoupon = CreateCoupon;
//# sourceMappingURL=subscription.schema.d.ts.map