// Auto-generated mappers for UserProfiles
// Generated at: 2025-10-06T17:55:56.826Z
// This file is automatically generated - do not edit manually

import type {
  UserProfilesInsert,
  UserProfilesSelect,
  UserProfilesUpdate,
} from '@/lib/types';

// Re-export user mappers with auth naming
export {
  fromCreateUserDTO as fromCreateAuthDTO,
  fromUpdateUserDTO as fromUpdateAuthDTO,
  toUserDTO as toAuthDTO,
} from './user';

// Transform UserProfiles from database to API format
export function userProfilesToApi(
  dbData: UserProfilesSelect
): UserProfilesSelect {
  return {
    id: dbData.id,
    email: dbData.email,
    passwordHash: dbData.passwordHash,
    firstName: dbData.firstName,
    lastName: dbData.lastName,
    displayName: dbData.displayName,
    bio: dbData.bio,
    avatarUrl: dbData.avatarUrl,
    ministryRole: dbData.ministryRole,
    denomination: dbData.denomination,
    organizationName: dbData.organizationName,
    yearsInMinistry: dbData.yearsInMinistry,
    countryCode: dbData.countryCode,
    timezone: dbData.timezone,
    languagePrimary: dbData.languagePrimary,
    culturalContext: dbData.culturalContext,
    subscriptionTier: dbData.subscriptionTier,
    accountStatus: dbData.accountStatus,
    lastActiveAt: dbData.lastActiveAt,
    createdAt: dbData.createdAt,
    updatedAt: dbData.updatedAt,
  };
}

// Transform UserProfiles from API to database format
export function userProfilesFromApi(
  apiData: UserProfilesInsert
): UserProfilesInsert {
  return {
    email: apiData.email,
    passwordHash: apiData.passwordHash,
    firstName: apiData.firstName,
    lastName: apiData.lastName,
    displayName: apiData.displayName,
    bio: apiData.bio,
    avatarUrl: apiData.avatarUrl,
    ministryRole: apiData.ministryRole,
    denomination: apiData.denomination,
    organizationName: apiData.organizationName,
    yearsInMinistry: apiData.yearsInMinistry,
    countryCode: apiData.countryCode,
    timezone: apiData.timezone,
    languagePrimary: apiData.languagePrimary,
    culturalContext: apiData.culturalContext,
    subscriptionTier: apiData.subscriptionTier,
    accountStatus: apiData.accountStatus,
    lastActiveAt: apiData.lastActiveAt,
  };
}

// Transform UserProfiles from API to database update format
export function userProfilesFromUpdate(
  apiData: UserProfilesUpdate
): UserProfilesUpdate {
  return {
    email: apiData.email,
    passwordHash: apiData.passwordHash,
    firstName: apiData.firstName,
    lastName: apiData.lastName,
    displayName: apiData.displayName,
    bio: apiData.bio,
    avatarUrl: apiData.avatarUrl,
    ministryRole: apiData.ministryRole,
    denomination: apiData.denomination,
    organizationName: apiData.organizationName,
    yearsInMinistry: apiData.yearsInMinistry,
    countryCode: apiData.countryCode,
    timezone: apiData.timezone,
    languagePrimary: apiData.languagePrimary,
    culturalContext: apiData.culturalContext,
    subscriptionTier: apiData.subscriptionTier,
    accountStatus: apiData.accountStatus,
    lastActiveAt: apiData.lastActiveAt,
  };
}

// Array mappers
export function userProfilesArrayToApi(
  data: UserProfilesSelect[]
): UserProfilesSelect[] {
  return data.map(item => userProfilesToApi(item));
}

export function userProfilesArrayFromApi(
  data: UserProfilesInsert[]
): UserProfilesInsert[] {
  return data.map(item => userProfilesFromApi(item));
}

// Legacy exports for backward compatibility
export const toUserProfileDTO = userProfilesToApi;
export const fromCreateUserProfileDTO = userProfilesFromApi;
export const fromUpdateUserProfileDTO = userProfilesFromUpdate;
